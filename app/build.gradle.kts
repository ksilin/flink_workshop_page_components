/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("com.github.davidmc24.gradle.plugin.avro") version "1.9.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = uri("https://packages.confluent.io/maven/")
    }
}

dependencies {
    implementation(libs.bundles.flink)
    implementation(libs.bundles.avro)
    implementation(libs.vavr)
    implementation(libs.typesafe.config)
    implementation(libs.bundles.logging)

    testImplementation(libs.bundles.testing)

    testImplementation(libs.flink.streaming.java) {
        artifact {
            classifier = "tests"
        }
    }

    // testcontainers bug
    // https://github.com/testcontainers/testcontainers-java/issues/8798
    testImplementation("commons-codec:commons-codec:1.17.0")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
    main {
        java {
            srcDir("src/main/java")
            srcDir("build/generated-main-avro-java") // Add generated sources
        }
        resources {
            srcDir("src/main/resources")
        }
    }
}

avro {
    //createSetters.set(true)
    fieldVisibility.set("PRIVATE")
    outputCharacterEncoding.set("UTF-8")
    stringType.set("String")
    isEnableDecimalLogicalType.set(true)
}

application {
    // Define the main class for the application.
    mainClass = "com.example.contentful.ConfluentCloudApp"
}

tasks.withType<ProcessResources> {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    // Fix Java 17 module system issues with Flink serialization
    jvmArgs(
        "--add-opens", "java.base/java.util=ALL-UNNAMED",
        "--add-opens", "java.base/java.lang=ALL-UNNAMED",
        "--add-opens", "java.base/java.util.concurrent.atomic=ALL-UNNAMED",
        "--add-opens", "java.base/java.io=ALL-UNNAMED"
    )
    
    // Use test-specific log4j2 configuration
    systemProperty("log4j2.configurationFile", "log4j2-test.xml")
}

