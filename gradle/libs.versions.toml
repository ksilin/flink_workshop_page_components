# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
flink = "1.20.0"
kafka = "3.9.1"
testcontainers = "1.20.4"
jackson = "2.18.2"
typesafe-config = "1.4.3"
flinkKafka = "3.4.0-1.20"
confluent = "7.9.2"
slf4j = "2.0.16"
log4j = "2.24.3"
datafaker = "2.4.2"
mockito = "3.12.4"
junit-jupiter = "5.11.4"
guava = "33.3.1-jre"
avro = "1.11.3"


[libraries]
flink-streaming-java = { group = "org.apache.flink", name = "flink-streaming-java", version.ref = "flink" }
flink-clients = { group = "org.apache.flink", name = "flink-clients", version.ref = "flink" }
jackson-databind = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jackson-annotations = {group = "com.fasterxml.jackson.core", name = "jackson-annotations", version.ref = "jackson"}
flink-connector-kafka = { group = "org.apache.flink", name = "flink-connector-kafka", version.ref = "flinkKafka" }
flink-connector-base = { group = "org.apache.flink", name = "flink-connector-base", version.ref = "flink" }
flink-json = { group = "org.apache.flink", name = "flink-json", version.ref = "flink" }

kafka-clients = { group = "org.apache.kafka", name = "kafka-clients", version.ref = "kafka" }
cflt-sr-client = { module = "io.confluent:kafka-schema-registry-client", version.ref = "confluent" }

# Avro support

flink-avro = {group = "org.apache.flink", name = "flink-avro", version.ref = "flink"}
avro = {group = "org.apache.avro", name = "avro", version.ref = "avro"}
cflt-avro-serializer = { module = "io.confluent:kafka-avro-serializer", version.ref = "confluent" }

typesafe-config = { group = "com.typesafe", name = "config", version.ref = "typesafe-config" }
slf4j-api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
log4j-core = { group = "org.apache.logging.log4j", name = "log4j-core", version.ref = "log4j" }
log4j-slf4j2-impl = { group = "org.apache.logging.log4j", name = "log4j-slf4j2-impl", version.ref = "log4j" }
vavr = { group = "io.vavr", name = "vavr", version = "0.10.5" }
kafka-testcontainers = { group = "org.testcontainers", name = "kafka", version.ref = "testcontainers" }
testcontainers-jupiter = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
datafaker = { group = "net.datafaker", name = "datafaker", version.ref = "datafaker" }
flink-test-utils = { group = "org.apache.flink", name = "flink-test-utils", version.ref = "flink" }
flink-runtime = { group = "org.apache.flink", name = "flink-runtime", version.ref = "flink" }
#flink-streaming-java-tests = { group = "org.apache.flink", name = "flink-streaming-java", version.ref = "flink", classifier = "tests" }
flink-runtime-web = { group = "org.apache.flink", name = "flink-runtime-web", version.ref = "flink" }
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { group = "org.mockito", name = "mockito-junit-jupiter", version.ref = "mockito" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }



[bundles]
flink = ["flink-streaming-java", "flink-clients", "flink-connector-kafka", "flink-connector-base", "flink-json", "jackson-databind"]
logging = ["slf4j-api", "log4j-core", "log4j-slf4j2-impl"]
testing = ["junit-jupiter", "kafka-testcontainers", "testcontainers-jupiter", "flink-test-utils", "flink-runtime", "flink-runtime-web", "datafaker", "mockito-core", "mockito-junit-jupiter"]
avro = ["flink-avro", "avro", "cflt-avro-serializer"]


